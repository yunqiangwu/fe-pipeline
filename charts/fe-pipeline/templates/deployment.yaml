apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fe-pipeline.fullname" . }}
  labels:
    {{- include "fe-pipeline.labels" . | nindent 4 }}
    fe-pipeline: ws-manager
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "fe-pipeline.selectorLabels" . | nindent 6 }}
      fe-pipeline: ws-manager
  template:
    metadata:
      labels:
        {{- include "fe-pipeline.selectorLabels" . | nindent 8 }}
        fe-pipeline: ws-manager
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "fe-pipeline.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: fe-pipeline-ws-data
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: config
        configMap:
          name: {{ .Release.Name }}-config
      containers:
        - name: {{ .Chart.Name }}
          env:
{{- range $name, $value := .Values.env.open }}
{{- if not (empty $value) }}
          - name: {{ $name | quote }}
            value: {{ $value | quote }}
{{- end }}
{{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - mountPath: /app/server/config/config.production.yml
            name: config
            subPath: 'config.production.yml'
          - mountPath: /app/fe-pipeline-home/data
            name: fe-pipeline-ws-data
            {{- if not (empty .Values.persistence.subPath) }}
            subPath: {{ .Values.persistence.subPath }}
            {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            failureThreshold: 1000
            periodSeconds: 20
            httpGet:
              path: /
              port: 3000
          readinessProbe:
            httpGet:
              path: /
              port: 3000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
