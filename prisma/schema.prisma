// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  // provider = "mysql"
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId        Int            @id @default(autoincrement())
  email         String         @unique
  username      String?
  avatar        String?
  password      String?
  phone         String?
  sex           Int?
  threeAccounts ThreeAccount[]
  posts         Post[]
  space         Space[]
  project       Project[]
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean  @default(false)
  viewCount Int      @default(0)
  author    User?    @relation(fields: [authorId], references: [userId])
  authorId  Int?
}

model ThreeAccount {
  id                   Int     @id @default(autoincrement())
  threePlatformType    String
  authHost             String
  authClientId         String
  threeAccountUsername String
  accessToken          String
  tokenInfo            String?
  accountData          String?
  user                 User    @relation(fields: [userId], references: [userId])
  userId               Int
}

model Space {
  id                Int                 @id @default(autoincrement())
  name              String @unique
  user              User                @relation(fields: [userId], references: [userId])
  userId            Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  spaceVersions      SpaceVersion[]
  spaceVersionAlias SpaceVersionAlias[]
}

model SpaceVersion {
  id                Int                 @id @default(autoincrement())
  name              String
  space             Space               @relation(fields: [spaceId], references: [id])
  spaceId           Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  spaceVersionAlias SpaceVersionAlias[]
  projectItem       ProjectItem[]
}

model SpaceVersionAlias {
  id        Int          @id @default(autoincrement())
  name      String
  space     Space        @relation(fields: [spaceId], references: [id])
  spaceId   Int
  version   SpaceVersion @relation(fields: [versionId], references: [id])
  versionId Int

  @@unique([spaceId, name], name: "SpaceVersionAlias_spaceId_name_key")

  projectItem ProjectItem[]
}

model ProjectItem {
  id        Int      @id @default(autoincrement())
  Project   Project? @relation(fields: [projectId], references: [id])
  projectId Int?
  watchAlias Boolean?
  lastVersionId Int?

  version SpaceVersion?      @relation(fields: [spaceVersionId], references: [id])
  alias   SpaceVersionAlias? @relation(fields: [spaceVersionAliasId], references: [id])
  spaceVersionId      Int?
  spaceVersionAliasId Int?
}

model Project {
  id          Int           @id @default(autoincrement())
  name        String
  user        User          @relation(fields: [userId], references: [userId])
  userId      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectItem ProjectItem[]
}
