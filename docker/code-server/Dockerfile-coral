FROM node:15.8.0 as vscode-extensions-builder
WORKDIR /app
ADD ./fe-pipeline-extensions/ /app/
RUN yarn --registry=https://registry.npm.taobao.org/ && yarn run pkg-vsce

FROM debian:10

RUN apt-get update \
 && apt-get install -y \
    curl \
    dumb-init \
    unzip \
    htop \
    locales \
    man \
    nano \
    git \
    procps \
    openssh-client \
    sudo \
    vim.tiny \
    lsb-release \
  && rm -rf /var/lib/apt/lists/*

# https://wiki.debian.org/Locale#Manually
RUN sed -i "s/# en_US.UTF-8/en_US.UTF-8/" /etc/locale.gen \
  && locale-gen
ENV LANG=en_US.UTF-8

RUN adduser --gecos '' --disabled-password coder && \
  echo "coder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/nopasswd

RUN ARCH="$(dpkg --print-architecture)" && \
    curl -fsSL "https://github.com/boxboat/fixuid/releases/download/v0.4.1/fixuid-0.4.1-linux-$ARCH.tar.gz" | tar -C /usr/local/bin -xzf - && \
    chown root:root /usr/local/bin/fixuid && \
    chmod 4755 /usr/local/bin/fixuid && \
    mkdir -p /etc/fixuid && \
    printf "user: coder\ngroup: coder\n" > /etc/fixuid/config.yml

ENV NVM_DIR /sysapp/nvm
ENV NVM_NODEJS_ORG_MIRROR http://npm.taobao.org/mirrors/node

RUN mkdir -p $NVM_DIR && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash

RUN . $NVM_DIR/nvm.sh && nvm install 14 && npm i -g yarn

# COPY release-packages/code-server*.deb /tmp/
RUN curl -fL https://github.com/cdr/code-server/releases/download/v3.9.2/code-server_3.9.2_amd64.deb -o /tmp/code-server-install.deb
RUN dpkg -i /tmp/code-server-install.deb && rm /tmp/code-server*.deb

RUN cd /usr/lib/code-server/lib/vscode/extensions/simple-browser && . $NVM_DIR/nvm.sh && yarn add vscode-codicons

COPY --from=vscode-extensions-builder /app/*.vsix /workspace/extension/

COPY ./install-extension.sh /workspace/install-vscode-extension.sh

RUN . /workspace/install-vscode-extension.sh && rm -rf /workspace/install-vscode-extension.sh

COPY ./entrypoint.sh /usr/bin/entrypoint.sh

USER coder

RUN sudo chown -R coder:coder /workspace

EXPOSE 8080
# This way, if someone sets $DOCKER_USER, docker-exec will still work as
# the uid will remain the same. note: only relevant if -u isn't passed to
# docker-run.
# USER coder

RUN sudo chown -R coder:coder $NVM_DIR

RUN echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm ' >> ~/.bashrc \
  echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion' >> ~/.bashrc

ENV CORAL_DEV=true

RUN mkdir -p /home/coder/.local/share/code-server/User/ 
COPY ./defaultVsCodeSetting.json /home/coder/.local/share/code-server/User/settings.json

RUN . $NVM_DIR/nvm.sh && \
  npm i -g coral-cli && \
  cd /workspace && \
  coral create coral-demo && \
  cd coral-demo && \
  rm -rf templates/Demo && \
  yarn install && \
  yarn cache clean && \
  npm cache clean --force

WORKDIR /workspace
ENTRYPOINT ["/usr/bin/entrypoint.sh", "--bind-addr", "0.0.0.0:8080", "."]
